package com.example.accessingdatamysql;

import java.util.Optional;
import java.util.List;
import java.io.*;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


@Controller	// This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	private TurnamenRepository turnamenRepository;

	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}
	@PostMapping(path="/addTurnamen") // Map ONLY GET Requests
        //public @ResponseBody String addNewStore (@RequestParam String name
        public @ResponseBody String addNewTurnamen (@RequestParam String name
                        , @RequestParam String email) {
                // @ResponseBody means the returned String is the response, not a view name
                // @RequestParam means it is a parameter from the GET or POST request

                //Store n = new Store();
                String jsonString = "{\"k1\":\"v1\",\"k2\":\"v2\"}";
                Turnamen n = new Turnamen();
                /*ObjectMapper mapper = new ObjectMapper();
                try {
                        //JsonNode actualObj = mapper.readTree(json);
                        JsonNode actualObj = mapper.readTree(jsonString);
                        JsonNode aK1 = actualObj.get("k1");
			//setNama_turnamen
                        n.setNama_turnamen(aK1.asText());
                        //log.error(aK1.asText());
                        //log.error(actualObj.get(0).textValue());
                } catch (IOException e) {
                        throw new RuntimeException("Error :" + e);
                        }
		*/
			
                n.setNama_turnamen(name);
                turnamenRepository.save(n);
                return "Saved";
        }

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}
